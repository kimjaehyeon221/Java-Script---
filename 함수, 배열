//함수
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title></title>
</head>
<body>
<script type="text/javascript">
	//함수에 대하여 -> 재사용성
	function numbering() {
		var i = 0;
		while(i < 10){
			document.write(i+"<br />");
			i+= 1;
		}
	}
	for(var i = 0; i <1000; i ++ ){
		numbering();	
	}
	//return에 대하여
	function get_member1() {
		return 'egoing';
		return 'getete';
	}
	function get_memner2() {
		return	'k8805';
	}
	alert(get_member1());
	alert(get_member2());
	//인자 -> 매개변수, parameter
	function get_argment(arg){
		return arg * 1000;
	}
	alert(get_argment(1)); //인자, argument
	alert(get_argment(2));
	function get_argument3(arg1, arg2) {
		return arg1, arg2
	}
	alert(get_argument3(10,20));
	alert(get_argument3(20,30));
	// 자바스크립트에서 처음 보는 함수를 정의하는 또 다른 방법.
	var numbering2 = function (){
		i = 0;
		while(i < 10){
			document.write(i);
			i += 1;
		}
	}
	numbering2();
	(function (){
		i = 0;
		while(i < 10){
			document.write(i);
			i += 1;
		}
	})(); //익명함수, 1회성으로 사용. -> 자바스크립트는 함수형 언어, 함수가 차지하는 위상이 매우 높다
</script>
</body>
</html>

// 배열
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title></title>
</head>
<body>
	<script type="text/javascript">
		function get_members(){
			return ['egoing', 'k8805', 'sorialgi']
		}
		var members = get_members()
		for (var i = 0; i < members.length; i++){
			document.write(members[i].toUpperCase() + '<br />');
		}
		// 배열의 조작 -> push : 하나 추가, concat: 두개 추가, unshift: 앞에 하나 추가 그리고 뒤에 인덱스 하나씩 추가, splice: 첫 번째 인자에 해당하는 원소부터 두 번째 인자에 해당하는 원소의 숫자만큼의 값을 배열로부터 제거한 후에 리턴한다., shift: 앞에 삭제, pop: 뒤에 삭제, sort: 정렬, reverse: 역순 정렬
	</script>
</body>
</html>
